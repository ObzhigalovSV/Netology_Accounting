
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	СуммаПоДокументу = СписокНоменклатуры.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	КурсВалюты = РегистрыСведений.КурсыВалют.КурсВалюты(Валюта, Дата);
	
	Движения.Управленческий.Записывать = Истина;
	Движения.Управленческий.Записать();
	
	// Блокировка
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрБухгалтерии.Управленческий");
	ЭлементБлокировки.УстановитьЗначение("Счет", ПланыСчетов.Управленческий.Товары);
	ЭлементБлокировки.УстановитьЗначение("Организация", Организация);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = СписокНоменклатуры;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура, "Номенклатура");
	Блокировка.Заблокировать();
	
	// Данные для движений
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Количество) КАК Количество,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Сумма) КАК СуммаПродажи
		|ПОМЕСТИТЬ ВТ_Товары
		|ИЗ
		|	Документ.РасходнаяНакладная.СписокНоменклатуры КАК РасходнаяНакладнаяСписокНоменклатуры
		|ГДЕ
		|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Товары.Номенклатура КАК Номенклатура,
		|	ВТ_Товары.Количество КАК Количество,
		|	ЕСТЬNULL(УправленческийОстатки.КоличествоОстаток, 0) КАК КоличествоНаСкладе,
		|	ВТ_Товары.СуммаПродажи КАК СуммаПродажи
		|ПОМЕСТИТЬ ВТ_ТоварыКПродаже
		|ИЗ
		|	ВТ_Товары КАК ВТ_Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Остатки(
		|				&МоментВремени,
		|				Счет = &Счет,
		|				&Субконто,
		|				Организация = &Организация
		|					И Субконто2 = &Склад
		|					И Субконто1 В
		|						(ВЫБРАТЬ
		|							ВТ_Товары.Номенклатура КАК Номенклатура
		|						ИЗ
		|							ВТ_Товары КАК ВТ_Товары)) КАК УправленческийОстатки
		|		ПО ВТ_Товары.Номенклатура = УправленческийОстатки.Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТоварыКПродаже.Номенклатура КАК Номенклатура,
		|	ВТ_ТоварыКПродаже.Номенклатура.Представление КАК НоменклатураПредставление,
		|	ВТ_ТоварыКПродаже.Количество КАК КоличествоКПродаже,
		|	УправленческийОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	УправленческийОстатки.СуммаОстаток КАК СуммаОстаток,
		|	ВТ_ТоварыКПродаже.КоличествоНаСкладе КАК КоличествоНаСкладе,
		|	ВТ_ТоварыКПродаже.СуммаПродажи КАК СуммаПродажи
		|ИЗ
		|	ВТ_ТоварыКПродаже КАК ВТ_ТоварыКПродаже
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Остатки(
		|				&МоментВремени,
		|				Счет = &Счет,
		|				&Субконто,
		|				Организация = &Организация
		|					И Субконто1 В
		|						(ВЫБРАТЬ
		|							ВТ_ТоварыКПродаже.Номенклатура КАК Номенклатура
		|						ИЗ
		|							ВТ_ТоварыКПродаже КАК ВТ_ТоварыКПродаже)) КАК УправленческийОстатки
		|		ПО ВТ_ТоварыКПродаже.Номенклатура = УправленческийОстатки.Субконто1
		|ИТОГИ
		|	МАКСИМУМ(КоличествоКПродаже),
		|	СУММА(КоличествоОстаток),
		|	МАКСИМУМ(СуммаОстаток),
		|	МАКСИМУМ(КоличествоНаСкладе),
		|	МАКСИМУМ(СуммаПродажи)
		|ПО
		|	Номенклатура";
		
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Субконто = Новый Массив;
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура);
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Склад);
	Запрос.УстановитьПараметр("Субконто", Субконто);
	Запрос.УстановитьПараметр("Счет", ПланыСчетов.Управленческий.Товары);
	Запрос.УстановитьПараметр("Склад", Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.КоличествоНаСкладе <  Выборка.КоличествоКПродаже Тогда
			
			Отказ = Истина;
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон("Остатка материала %1 недостаточно. В наличии %2, а необходимо %3.", 
			Выборка.НоменклатураПредставление, Выборка.КоличествоНаСкладе, Выборка.КоличествоКПродаже) ;
			Сообщение.Сообщить();
			
		КонецЕсли;                         		
		
		Если Отказ Тогда
			Продолжить;
		КонецЕсли;
		
		// регистр Управленческий 
		
		Движение = Движения.Управленческий.Добавить();
		Движение.СчетДт = ПланыСчетов.Управленческий.ПрибылиУбытки;
		Движение.СчетКт = ПланыСчетов.Управленческий.Товары;
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Выборка.Номенклатура;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Склад] = Склад;
		Движение.КоличествоКт = Выборка.КоличествоКПродаже;
		
		Если  Выборка.КоличествоКПродаже =  Выборка.КоличествоОстаток Тогда
			Движение.Сумма = Выборка.СуммаОстаток;
		Иначе
			СебестоимостьЕдиницы = Выборка.СуммаОстаток/Выборка.КоличествоОстаток;
			Движение.Сумма = Выборка.КоличествоКПродаже * СебестоимостьЕдиницы;
		КонецЕсли;
		
		
		Движение = Движения.Управленческий.Добавить();
		Движение.СчетКт = ПланыСчетов.Управленческий.ПрибылиУбытки;	  
		Движение.СчетДт = ПланыСчетов.Управленческий.Покупатели;  
		
		Движение.Период = Дата;
		Движение.Организация = Организация;   	
		Движение.Сумма = Выборка.СуммаПродажи * КурсВалюты;
		
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Выборка.Номенклатура;	
		
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагент] = Контрагент;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Валюта] = Валюта;
		Движение.СуммаВалДт = Выборка.СуммаПродажи ;
		
	КонецЦикла;
		
КонецПроцедуры
